{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/exit","result":{"data":{"site":{"siteMetadata":{"title":"Big Fast Blog","subtitle":"Musings on technology"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/ruby-exit-exit-systemexit-and-at_exit-blunder","categorySlug":"/category/ruby/"},"frontmatter":{"title":"Ruby exit, exit!, SystemExit and at_exit blunder","date":"2012-09-08T15:25:00-07:00","category":"Ruby","description":"Recently, we hit a problem with Ruby's exit command. If something went horribly wrong and it made no sense for our application to continue in its current state then we would abort with exit 1. We use supervisord to manage processes, so in this case when we exited with exit status of 1, supervisord would assume something went wrong and restart the process for us. Or at least that is what we thought..."}}}]}},"pageContext":{"tag":"exit","currentPage":0,"postsLimit":16,"postsOffset":0,"prevPagePath":"/tag/exit","nextPagePath":"/tag/exit/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["251939775","3942705351","401334301"]}